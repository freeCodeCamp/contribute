---
import type { Props } from '@astrojs/starlight/props';
import MobileMenuFooter from '@astrojs/starlight/components/MobileMenuFooter.astro';
import { type CollectionEntry, getEntry } from 'astro:content';

const entry = await getEntry('i18n', Astro.currentLocale ?? '');
const prefix = Astro.currentLocale == 'en' ? '' : Astro.currentLocale;
const { nested } = Astro.props;

interface Section {
  title: keyof CollectionEntry<'i18n'>['data'];
  contents: {
    href: string;
    title: keyof CollectionEntry<'i18n'>['data'];
    strong?: boolean;
  }[];
  addSeparator?: boolean;
}

const content: Section[] = [
  {
    title: 'sidebar.gettingStarted',
    contents: [
      { href: '/index', title: 'sidebar.introduction' },
      { href: '/FAQ', title: 'sidebar.faq' },
      { href: '/security', title: 'sidebar.report_vulnerability' }
    ]
  },
  {
    title: 'sidebar.translation_contribution',
    contents: [
      { href: '/how-to-translate-files', title: 'sidebar.translate_resources' },
      {
        href: '/how-to-proofread-files',
        title: 'sidebar.proofread_translations'
      }
    ]
  },
  {
    title: 'sidebar.code_contribution',
    contents: [
      {
        href: '/how-to-setup-freecodecamp-locally',
        title: 'sidebar.setup_freecodecamp'
      },
      { href: '/codebase-best-practices', title: 'sidebar.best_practices' },
      {
        href: '/how-to-contribute-to-the-codebase',
        title: 'sidebar.work_on_codebase'
      },
      {
        href: '/how-to-work-on-coding-challenges',
        title: 'sidebar.work_on_coding_challenges'
      },
      { href: '/curriculum-help', title: 'sidebar.use_the_curriculum_helpers' },
      {
        href: '/how-to-work-on-the-component-library',
        title: 'sidebar.work_on_component_library'
      },
      {
        href: '/how-to-work-on-practice-projects',
        title: 'sidebar.work_on_practice_projects'
      },
      {
        href: '/how-to-setup-freecodecamp-mobile-app-locally',
        title: 'sidebar.work_on_mobile_app'
      },
      {
        href: '/how-to-work-on-tutorials-that-use-coderoad',
        title: 'sidebar.coderoad'
      },
      {
        href: '/how-to-work-on-localized-client-webapp',
        title: 'sidebar.work_on_webapp'
      },
      {
        href: '/how-to-add-playwright-tests',
        title: 'sidebar.work_on_playwright_tests'
      },
      {
        href: '/how-to-help-with-video-challenges',
        title: 'sidebar.work_on_video_challenges'
      },
      {
        href: '/how-to-work-on-the-docs-theme',
        title: 'sidebar.work_on_documentation'
      },
      {
        href: '/how-to-open-a-pull-request',
        title: 'sidebar.open_a_pull_request'
      }
    ]
  },
  {
    title: 'sidebar.additional_guides',
    contents: [
      { href: '/curriculum-file-structure', title: 'sidebar.file_structure' },
      {
        href: '/how-to-catch-outgoing-emails-locally',
        title: 'sidebar.debug_outgoing_emails_locally'
      },
      { href: '/how-to-setup-wsl', title: 'sidebar.setup_fcc_on_wsl' },
      {
        href: '/how-to-use-docker-on-windows-home',
        title: 'sidebar.docker_on_windows_home'
      },
      { href: '/user-token-workflow', title: 'sidebar.user_token_workflow' },
      {
        href: '/troubleshooting-development-issues',
        title: 'sidebar.troubleshooting_development_issues'
      },
      {
        href: '/authors-analytics-manual',
        title: 'sidebar.authors_analytics_manual'
      }
    ]
  },
  {
    title: 'sidebar.flight_manuals',
    addSeparator: true,
    contents: [
      { href: '/moderator-handbook', title: 'sidebar.moderator_handbook' },
      { href: '/reply-templates', title: 'sidebar.reply_templates' },
      {
        href: '/language-lead-handbook',
        title: 'sidebar.language_lead_handbook'
      },
      { href: '/devops', title: 'sidebar.devops_handbook' },
      {
        href: '/courses-vscode-extension',
        title: 'sidebar.courses_vscode_extension'
      },
      {
        href: '/how-to-enable-new-languages',
        title: 'sidebar.enable_new_language'
      }
    ]
  },
  {
    title: 'sidebar.our_community',
    addSeparator: true,
    contents: [
      {
        href: 'https://github.com/freecodecamp/freecodecamp',
        title: 'sidebar.github',
        strong: true
      },
      {
        href: 'https://freecodecamp.org/forum/c/contributors',
        title: 'sidebar.discourse_forum',
        strong: true
      },
      {
        href: 'https://discord.gg/PRyKn3Vbay',
        title: 'sidebar.chat_server',
        strong: true
      }
    ]
  }
];
---

<nav class:list={{ 'top-level': !nested }}>
  <ul>
    {
      content.map(
        ({ title, contents, addSeparator = false }) =>
          title && (
            <>
              {addSeparator && <hr />}
              <li>
                <strong>{entry?.data[title]}</strong>
                <ul>
                  {contents &&
                    contents.map(
                      item =>
                        item.title && (
                          <li>
                            <a
                              href={`${prefix}${item.href}`}
                              title={entry?.data[item.title]}
                            >
                              {item.strong ? (
                                <strong>{entry?.data[item.title]}</strong>
                              ) : (
                                entry?.data[item.title]
                              )}
                            </a>
                          </li>
                        )
                    )}
                </ul>
              </li>
            </>
          )
      )
    }
  </ul>
</nav>
<div class='md:sl-hidden'>
  <MobileMenuFooter {...Astro.props} />
</div>

<style>
  ul {
    --sl-sidebar-item-padding-inline: 0.5rem;
    list-style: none;
    padding: 0;
  }

  li {
    overflow-wrap: anywhere;
  }

  ul ul li {
    margin-inline-start: var(--sl-sidebar-item-padding-inline);
    border-inline-start: 1px solid var(--sl-color-hairline-light);
    padding-inline-start: var(--sl-sidebar-item-padding-inline);
  }

  .large {
    font-size: var(--sl-text-lg);
    font-weight: 600;
    color: var(--sl-color-white);
  }

  .top-level > li + li {
    margin-top: 0.75rem;
  }

  summary {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.2em var(--sl-sidebar-item-padding-inline);
    line-height: 1.4;
    cursor: pointer;
    user-select: none;
  }
  summary::marker,
  summary::-webkit-details-marker {
    display: none;
  }

  .caret {
    transition: transform 0.2s ease-in-out;
    flex-shrink: 0;
  }
  :global([dir='rtl']) .caret {
    transform: rotateZ(180deg);
  }
  [open] > summary .caret {
    transform: rotateZ(90deg);
  }

  a {
    display: block;
    border-radius: 0.25rem;
    text-decoration: none;
    color: var(--sl-color-gray-2);
    padding: 0.3em var(--sl-sidebar-item-padding-inline);
    line-height: 1.4;
  }

  a:hover,
  a:focus {
    color: var(--sl-color-white);
  }

  [aria-current='page'],
  [aria-current='page']:hover,
  [aria-current='page']:focus {
    font-weight: 600;
    color: var(--sl-color-text-invert);
    background-color: var(--sl-color-text-accent);
  }

  a > *:not(:last-child),
  .group-label > *:not(:last-child) {
    margin-inline-end: 0.25em;
  }

  @media (min-width: 50rem) {
    .top-level > li + li {
      margin-top: 0.5rem;
    }
    .large {
      font-size: var(--sl-text-base);
    }
    a {
      font-size: var(--sl-text-sm);
    }
  }
</style>
